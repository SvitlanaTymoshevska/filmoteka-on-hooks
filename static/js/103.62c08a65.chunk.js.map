{"version":3,"file":"static/js/103.62c08a65.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","components/FilmDetails/FilmDetails.Styled.jsx","components/FilmDetails/FilmDetails.jsx","pages/Film/Film.styled.jsx","pages/Film/Film.jsx","services/api-films-service.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport { theme } from \"constants/theme\";\nimport styled from \"styled-components\";\n\nexport const StyledLink = styled(Link)`\n  display: inline-block;\n  margin: 20px 0 0 20px;\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: ${theme.colors.main};\n  background-color: ${theme.colors.blurAccent};\n  font-weight: 500;\n\n  :hover {\n     background-color: ${theme.colors.accent};\n    \n  }\n`;","import { PropTypes } from \"prop-types\";\nimport { StyledLink } from \"components/BackLink/BackLink.styled\";\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      {children}\n    </StyledLink>\n  );\n};\n\nBackLink.propTypes = {\n  to: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n  ]).isRequired,\n  children: PropTypes.node,\n};","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: 220px 1fr ;\n  padding: 20px;  \n  box-shadow: 0 4px 4px rgb(0 0 0 / 25%); \n`;\n\nexport const Img = styled.img`\n  display: block;\n  width: 200px;\n  height: 300px;\n  border-radius: 5px;\n  object-fit: cover;\n`;\n\nexport const Plug = styled.div`\n  width: 200px;\n  height: 300px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: grey;\n`;","import {PropTypes} from \"prop-types\";\nimport { Container, Img, Plug } from \"components/FilmDetails/FilmDetails.Styled\";\n\nconst getYear = (release_date) => {\n    let year = '';\n    \n    if (!release_date) {\n    return year;\n    }\n    year = ` (${release_date?.slice(0, 4)})`;\n    return year;\n}\n\nconst getGenreNames = (genres) => {\n    let genreNames = \"unknown\";\n\n    if (!genres) {\n        return genreNames;\n    }\n    genreNames = genres.map(genre => genre.name).join(\", \");\n    return genreNames;\n}\n\nexport const FilmDetails = ({ film }) => { \n    const { poster_path, genres, overview, title, release_date, vote_average } = film;\n\n    const poster = poster_path ? (\n        <Img\n            src={`https://image.tmdb.org/t/p/w1280/${poster_path}`}\n            alt={`Poster of the film ${title}`}\n            loading=\"lazy\"\n        />\n    ) : <Plug>Poster not found</Plug>;   \n    \n    const userScore = (vote_average * 10).toFixed(0);\n\n    return (\n        <Container>\n            {poster}\n            <div>\n                <h2>{title}{getYear(release_date)}</h2>\n                <p>User Score {userScore}%</p>\n                <h3>Overview</h3>\n                <p>{overview}</p>\n                <h4>Genres</h4>\n                <p>{getGenreNames(genres)}</p>\n            </div>\n        </Container>\n    );\n};\n\nFilmDetails.propTypes = {\n    poster_path: PropTypes.string,\n    genres: PropTypes.arrayOf(PropTypes.object),\n    overview: PropTypes.string,\n    title: PropTypes.string,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number,\n};","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const Wrapper = styled.section`\n  position: relative;\n  flex-grow: 1;\n`;\n\nexport const Container = styled.div`\n  max-width: 320px;\n  margin: 0 auto;\n  padding: 20px 20px 40px;\n  line-height: 1.35;\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n    padding: 60px 32px 60px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    max-width: 1280px;\n    font-size: 20px;\n    line-height: 1.2;\n  }\n`;\n\nexport const NavWrapper = styled.div`\n    padding: 20px;  \n    box-shadow: 0 4px 4px rgb(0 0 0 / 25%); \n`;\n\nexport const Item = styled.li`\n    margin-bottom: 8px; \n`;\n\nexport const StyledLink = styled(Link)`\n    color: black; \n\n    &:hover {\n        font-weight: bold;\n    }\n`;","import { useEffect, useState, Suspense } from \"react\";\nimport { useParams, useLocation, Outlet } from \"react-router-dom\";\nimport { fetchFilmByID } from \"services/api-films-service\";\nimport { BackLink } from \"components/BackLink/BackLink\";\nimport { FilmDetails } from \"components/FilmDetails/FilmDetails\";\nimport { Wrapper, Container, NavWrapper, Item, StyledLink } from \"pages/Film/Film.styled\"; \n\nconst Film = () => {\n    const { id } = useParams();\n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? \"/\";\n\n    const [film, setFilm] = useState(null);\n\n    useEffect(() => {\n        fetchFilmByID(id).then(film => {\n            setFilm(film);\n        });\n    }, [id]);\n\n    return (\n        film && (\n            <Wrapper>\n                <Container>\n                    <BackLink to={backLinkHref}>Go back</BackLink>\n                    <FilmDetails film={film} />\n                    <NavWrapper>\n                        <h3>Additional information</h3>\n                        <ul>\n                            <Item>\n                                <StyledLink to=\"cast\" id={id}>Cast</StyledLink>\n                            </Item>\n                            <Item>\n                                <StyledLink to=\"reviews\">Reviews</StyledLink>\n                            </Item>\n                        </ul>\n                    </NavWrapper>\n                    <Suspense fallback={null}>\n                        <Outlet />\n                    </Suspense>\n                </Container>\n            </Wrapper>\n        )\n    );\n};\n\nexport default Film;","import axios from \"axios\";\n\nconst API_KEY = '115b567d77b04428b1251a93b22d9778';\n\nexport async function fetchFilms (page, query) {  \n    let URL = \"\";\n    if (query) {\n        URL = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`;\n    } else {\n        URL = `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}&page=${page}`;\n    }\n\n    const response = await axios.get(URL);\n    const results = response.data.results;\n\n    if (results.length === 0 && query) {\n      throw new Error();\n    }\n\n    return [results, response.data.total_pages];\n}\n\nexport async function fetchGenres() {\n    const URL = `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(URL);\n\n    return response.data.genres;\n}\n\nexport async function fetchFilmByID(id) {\n    const URL = `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(URL);\n\n    return response.data;\n}\n\nexport async function fetchCast(id) {\n    const URL = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(URL);\n\n    return response.data.cast;\n;\n}\n\nexport async function fetchReviews(id) {\n    const URL = `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n    const response = await axios.get(URL);\n    const results = response.data.results;\n\n    if (results.length === 0) {\n      throw new Error(\"We don't have any reviews for this movie.\");\n    }\n    return results;\n;\n}"],"names":["StyledLink","styled","Link","theme","BackLink","to","children","Container","Img","Plug","getYear","release_date","year","slice","getGenreNames","genres","genreNames","map","genre","name","join","FilmDetails","film","poster_path","overview","title","vote_average","poster","src","alt","loading","userScore","toFixed","Wrapper","NavWrapper","Item","id","useParams","backLinkHref","useLocation","state","from","useState","setFilm","useEffect","fetchFilmByID","then","Suspense","fallback","API_KEY","fetchFilms","page","query","URL","axios","response","results","data","length","Error","total_pages","fetchGenres","fetchCast","cast","fetchReviews"],"sourceRoot":""}