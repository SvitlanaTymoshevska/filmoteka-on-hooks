{"version":3,"file":"static/js/387.837579f8.chunk.js","mappings":"yPAEaA,EAAOC,EAAAA,GAAAA,GAAH,2CAIJC,EAAeD,EAAAA,GAAAA,EAAH,2CAIZE,EAASF,EAAAA,GAAAA,EAAH,+C,SCyBnB,EA9BgB,WACZ,IAAQG,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAaR,GACRS,MAAK,SAAAC,GAAY,OAAIN,EAAWM,EAAf,IACjBC,OAAM,SAAAN,GAAK,OAAIC,EAASD,EAAMO,QAAnB,GACnB,GAAE,CAACZ,KAGA,gCACKG,IACG,SAACP,EAAD,UACKO,EAAQU,KAAI,YAA8B,IAA3Bb,EAA0B,EAA1BA,GAAIc,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACxB,OACI,2BACI,SAAChB,EAAD,UAASe,KACT,uBAAIC,MAFCf,EAKhB,MAGRK,IAAS,SAACP,EAAD,UAAeO,MAGpC,C,kMC/BKW,EAAU,mCAET,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAA2BC,EAAMC,GAAjC,kFACCC,EAAM,GAENA,EADAD,EACG,4DAAwDH,EAAxD,kBAAyEG,EAAzE,iBAAuFD,GAEvF,kEAA8DF,EAA9D,iBAA8EE,GALlF,SAQoBG,EAAAA,EAAAA,IAAUD,GAR9B,UAQGE,EARH,OAWoB,KAFjBC,EAAUD,EAASE,KAAKD,SAElBE,SAAgBN,EAXzB,sBAYK,IAAIO,MAZT,gCAeI,CAACH,EAASD,EAASE,KAAKG,cAf5B,kEAkBA,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6FACGR,EADH,gEACkEJ,EADlE,4BAEoBK,EAAAA,EAAAA,IAAUD,GAF9B,cAEGE,EAFH,yBAIIA,EAASE,KAAKK,QAJlB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6B9B,GAA7B,gFACGoB,EADH,6CAC+CpB,EAD/C,oBAC6DgB,EAD7D,4BAEoBK,EAAAA,EAAAA,IAAUD,GAF9B,cAEGE,EAFH,yBAIIA,EAASE,MAJb,kEAOA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAyB/B,GAAzB,gFACGoB,EADH,6CAC+CpB,EAD/C,4BACqEgB,EADrE,4BAEoBK,EAAAA,EAAAA,IAAUD,GAF9B,cAEGE,EAFH,yBAIIA,EAASE,KAAKQ,MAJlB,kEAQA,SAAexB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BR,GAA5B,kFACGoB,EADH,6CAC+CpB,EAD/C,4BACqEgB,EADrE,mCAEoBK,EAAAA,EAAAA,IAAUD,GAF9B,UAEGE,EAFH,OAKoB,KAFjBC,EAAUD,EAASE,KAAKD,SAElBE,OALT,sBAMK,IAAIC,MAAM,6CANf,gCAQIH,GARJ,kE","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/api-films-service.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const List = styled.ul`\n    margin: 20px;\n`;\n\nexport const ErrorMessage = styled.p`\n    margin: 20px;\n`;\n\nexport const Accent = styled.p`\n   font-weight: bold;\n`;","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchReviews } from \"services/api-films-service\";\nimport { List, Accent, ErrorMessage } from \"components/Reviews/Reviews.styled\";\n\nconst Reviews = () => {\n    const { id } = useParams();\n    const [reviews, setReviews] = useState(null);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        fetchReviews(id)\n            .then(movieReviews => setReviews(movieReviews))\n            .catch(error => setError(error.message))\n    }, [id]);\n\n    return (\n        <>\n            {reviews && \n                <List>\n                    {reviews.map(({ id, author, content }) => {\n                        return (\n                            <li key={id}>\n                                <Accent>{author}</Accent>\n                                <p>{content}</p>\n                            </li>\n                        )\n                    })}\n                </List>}\n            \n            {error && <ErrorMessage>{error}</ErrorMessage>}\n        </>\n    );\n};\n\nexport default Reviews;","import axios from \"axios\";\n\nconst API_KEY = '115b567d77b04428b1251a93b22d9778';\n\nexport async function fetchFilms (page, query) {  \n    let URL = \"\";\n    if (query) {\n        URL = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`;\n    } else {\n        URL = `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}&page=${page}`;\n    }\n\n    const response = await axios.get(URL);\n    const results = response.data.results;\n\n    if (results.length === 0 && query) {\n      throw new Error();\n    }\n\n    return [results, response.data.total_pages];\n}\n\nexport async function fetchGenres() {\n    const URL = `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(URL);\n\n    return response.data.genres;\n}\n\nexport async function fetchFilmByID(id) {\n    const URL = `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(URL);\n\n    return response.data;\n}\n\nexport async function fetchCast(id) {\n    const URL = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(URL);\n\n    return response.data.cast;\n;\n}\n\nexport async function fetchReviews(id) {\n    const URL = `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n    const response = await axios.get(URL);\n    const results = response.data.results;\n\n    if (results.length === 0) {\n      throw new Error(\"We don't have any reviews for this movie.\");\n    }\n    return results;\n;\n}"],"names":["List","styled","ErrorMessage","Accent","id","useParams","useState","reviews","setReviews","error","setError","useEffect","fetchReviews","then","movieReviews","catch","message","map","author","content","API_KEY","fetchFilms","page","query","URL","axios","response","results","data","length","Error","total_pages","fetchGenres","genres","fetchFilmByID","fetchCast","cast"],"sourceRoot":""}